/*
 * FICO® Score
 * <p>FICO® Score<br/><br><img src='https://developer.circulodecredito.com.mx/sites/default/files/2024-01/Logo-Swaggers.png' height='70' width='270'/></p><br/>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cdc.apihub.mx.FS.client.model;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;
/**
 * Datos del domicilio de la persona a consultar
 */

public class Domicilio {
  @SerializedName("direccion")
  private String direccion = null;

  @SerializedName("coloniaPoblacion")
  private String coloniaPoblacion = null;

  @SerializedName("delegacionMunicipio")
  private String delegacionMunicipio = null;

  @SerializedName("ciudad")
  private String ciudad = null;

  @SerializedName("estado")
  private CatalogoEstados estado = null;

  @SerializedName("CP")
  private String CP = null;

  @SerializedName("fechaResidencia")
  private String fechaResidencia = null;

  @SerializedName("numeroTelefono")
  private String numeroTelefono = null;

  @SerializedName("tipoDomicilio")
  private String tipoDomicilio = null;

  @SerializedName("tipoAsentamiento")
  private int tipoAsentamiento;

  public Domicilio direccion(String direccion) {
    this.direccion = direccion;
    return this;
  }

   /**
   * Reportar el nombre de la calle, número exterior, número interior. Deben considerarse avenida,cerrada, manzana, lote, edificio,departamento etc. Debe contener por lo menos dos cadenas de caracteres para que el registro sea válido, de lo contrario el registro será rechazado.
   * @return direccion
  **/
  public String getDireccion() {
    return direccion;
  }

  public void setDireccion(String direccion) {
    this.direccion = direccion;
  }

  public Domicilio coloniaPoblacion(String coloniaPoblacion) {
    this.coloniaPoblacion = coloniaPoblacion;
    return this;
  }

   /**
   * Reportar la colonia a la cual pertenece la dirección contenida en el elemento dirección.
   * @return coloniaPoblacion
  **/
  public String getColoniaPoblacion() {
    return coloniaPoblacion;
  }

  public void setColoniaPoblacion(String coloniaPoblacion) {
    this.coloniaPoblacion = coloniaPoblacion;
  }

  public Domicilio delegacionMunicipio(String delegacionMunicipio) {
    this.delegacionMunicipio = delegacionMunicipio;
    return this;
  }

   /**
   * Reportar la delegación o municipio a la cual pertenece la dirección contenida en el elemento Dirección.
   * @return delegacionMunicipio
  **/
  public String getDelegacionMunicipio() {
    return delegacionMunicipio;
  }

  public void setDelegacionMunicipio(String delegacionMunicipio) {
    this.delegacionMunicipio = delegacionMunicipio;
  }

  public Domicilio ciudad(String ciudad) {
    this.ciudad = ciudad;
    return this;
  }

   /**
   * Reportar la ciudad a la cual pertenece la dirección contenida en el elemento Dirección.
   * @return ciudad
  **/
  public String getCiudad() {
    return ciudad;
  }

  public void setCiudad(String ciudad) {
    this.ciudad = ciudad;
  }

  public Domicilio estado(CatalogoEstados estado) {
    this.estado = estado;
    return this;
  }

   /**
   * Get estado
   * @return estado
  **/
  public CatalogoEstados getEstado() {
    return estado;
  }

  public void setEstado(CatalogoEstados estado) {
    this.estado = estado;
  }

  public Domicilio CP(String CP) {
    this.CP = CP;
    return this;
  }

   /**
   * El código postal reportado debe estar compuesto por 5 dígitos. Para que el código postal sea válido deberá corresponder al estado reportado.
   * @return CP
  **/
  public String getCP() {
    return CP;
  }

  public void setCP(String CP) {
    this.CP = CP;
  }

  public Domicilio fechaResidencia(String fechaResidencia) {
    this.fechaResidencia = fechaResidencia;
    return this;
  }

   /**
   * Get fechaResidencia
   * @return fechaResidencia
  **/
  public String getFechaResidencia() {
    return fechaResidencia;
  }

  public void setFechaResidencia(String fechaResidencia) {
    this.fechaResidencia = fechaResidencia;
  }

  public Domicilio numeroTelefono(String numeroTelefono) {
    this.numeroTelefono = numeroTelefono;
    return this;
  }

   /**
   * Get numeroTelefono
   * @return numeroTelefono
  **/
  public String getNumeroTelefono() {
    return numeroTelefono;
  }

  public void setNumeroTelefono(String numeroTelefono) {
    this.numeroTelefono = numeroTelefono;
  }

  public Domicilio tipoDomicilio(String tipoDomicilio) {
    this.tipoDomicilio = tipoDomicilio;
    return this;
  }

   /**
   * Get tipoDomicilio
   * @return tipoDomicilio
  **/
  public String getTipoDomicilio() {
    return tipoDomicilio;
  }

  public void setTipoDomicilio(String tipoDomicilio) {
    this.tipoDomicilio = tipoDomicilio;
  }

  public Domicilio tipoAsentamiento(int tipoAsentamiento) {
    this.tipoAsentamiento = tipoAsentamiento;
    return this;
  }

   /**
   * Get tipoAsentamiento
   * @return tipoAsentamiento
  **/
  public int getTipoAsentamiento() {
    return tipoAsentamiento;
  }

  public void setTipoAsentamiento(int tipoAsentamiento) {
    this.tipoAsentamiento = tipoAsentamiento;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Domicilio domicilio = (Domicilio) o;
    return Objects.equals(this.direccion, domicilio.direccion) &&
        Objects.equals(this.coloniaPoblacion, domicilio.coloniaPoblacion) &&
        Objects.equals(this.delegacionMunicipio, domicilio.delegacionMunicipio) &&
        Objects.equals(this.ciudad, domicilio.ciudad) &&
        Objects.equals(this.estado, domicilio.estado) &&
        Objects.equals(this.CP, domicilio.CP) &&
        Objects.equals(this.fechaResidencia, domicilio.fechaResidencia) &&
        Objects.equals(this.numeroTelefono, domicilio.numeroTelefono) &&
        Objects.equals(this.tipoDomicilio, domicilio.tipoDomicilio) &&
        Objects.equals(this.tipoAsentamiento, domicilio.tipoAsentamiento);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direccion, coloniaPoblacion, delegacionMunicipio, ciudad, estado, CP, fechaResidencia, numeroTelefono, tipoDomicilio, tipoAsentamiento);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Domicilio {\n");
    
    sb.append("    direccion: ").append(toIndentedString(direccion)).append("\n");
    sb.append("    coloniaPoblacion: ").append(toIndentedString(coloniaPoblacion)).append("\n");
    sb.append("    delegacionMunicipio: ").append(toIndentedString(delegacionMunicipio)).append("\n");
    sb.append("    ciudad: ").append(toIndentedString(ciudad)).append("\n");
    sb.append("    estado: ").append(toIndentedString(estado)).append("\n");
    sb.append("    CP: ").append(toIndentedString(CP)).append("\n");
    sb.append("    fechaResidencia: ").append(toIndentedString(fechaResidencia)).append("\n");
    sb.append("    numeroTelefono: ").append(toIndentedString(numeroTelefono)).append("\n");
    sb.append("    tipoDomicilio: ").append(toIndentedString(tipoDomicilio)).append("\n");
    sb.append("    tipoAsentamiento: ").append(toIndentedString(tipoAsentamiento)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
